{"version":3,"sources":["components/Home/Home.js","components/Logo/Logo.js","components/NavBar/NavBar.js","components/ProjectsList/ProjectsList.js","components/Login/Login.js","components/Register/Register.js","components/ProjectRegistration/ProjectRegistration.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","react_router_dom","to","Logo","NavBar","components_Logo_Logo","exact","activeClassName","Component","ProjectsList","Login","onFormSubmit","e","preventDefault","onSubmit","this","type","name","placeholder","style","fontSize","Register","ProjectRegistration","state","startDate","Date","handleChange","date","_this","setState","rows","lib","onChange","selected","App","basename","process","react","components_NavBar_NavBar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d146d925.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Home.scss';\n\nconst Home = () => {\n  return (\n    <div className='Home'>\n      <p>This is place for yours hobby projects.</p>\n      <p>If you have account please\n        <Link className='Link' to='/login'> Sing In</Link>\n      </p>\n      <p>If you don't have account please\n        <Link className='Link' to='/register'> Sing Up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <div className='Logo-main'>HC</div>\n      <span className='Logo-title'>HobbyCraft</span>\n    </div>\n  );\n};\n\nexport default Logo;","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport './NavBar.scss';\n\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className='NavBar'>\n        <Logo/>\n        <nav>\n          <ul>\n            <NavLink exact to='/' className='NavBar-link' activeClassName='active-link'>Home</NavLink>\n            <NavLink to='/projects' className='NavBar-link' activeClassName='active-link'>Projects</NavLink>\n            <NavLink to='/project-registration' className='NavBar-link New-Project' activeClassName='active-link'>New Project</NavLink>\n          </ul>\n        </nav>\n        <div>\n          <Link className='SignIn-link' to='/login'>Sign In</Link>\n          <Link className='SignIn-link' to='/register'>Sign Up</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './ProjectsList.scss';\n\nclass ProjectsList extends Component {\n  render() {\n    return (\n      <div className='ProjectsList'>\n        <p>Projects will be soon...</p>\n        <p>If you have project, please{' '}\n          <Link className='Link' to='/project-registration'>Register</Link>\n          {' '}yours project(hobby).\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ProjectsList;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Login.scss';\n\n\nclass Login extends Component {\n  onFormSubmit = (e) => {\n    e.preventDefault();\n  }\n  render() {\n    return (\n      <div className='Login'>\n        <h2>Please Sign In</h2>\n        <form onSubmit={this.onFormSubmit}>\n          <input type=\"email\" name='email' placeholder='Please enter yours email'/>\n          <input type=\"password\" name='password' placeholder='Please enter yours password'/>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/register'>Sign Up</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Register.scss'\n\nclass Register extends Component {\n  onFormSubmit = (e) => {\n    e.preventDefault();\n  }\n  render() {\n    return (\n      <div className='Register'>\n        <h2>Please Sign Up</h2>\n        <form onSubmit={this.onFormSubmit}>\n          <input type=\"text\" name='username' placeholder='Please enter your name'/>\n          <input type=\"email\" name='email' placeholder='Please enter your email'/>\n          <input type=\"password\" name='password' placeholder='Please enter your password'/>\n          <input type=\"password\" name='password2' placeholder='Please repeat your password'/>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/login'>Sign In</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport './ProjectRegistration.scss';\nimport { DatePicker } from '@y0c/react-datepicker';\nimport '@y0c/react-datepicker/assets/styles/calendar.scss';\n\nclass ProjectRegistration extends Component {\n  state = {\n    startDate: new Date()\n  }\n  onFormSubmit = (e) => {\n    e.preventDefault();\n  }\n  handleChange = (date) => {\n    this.setState({\n      startDate: date\n    });\n  }\n  render() {\n    return (\n      <div className='ProjectForm'>\n        <h2>Please Register Your Hobby</h2>\n        <form onSubmit={this.onFormSubmit}>\n          <input type=\"text\" name='username' placeholder='Please enter your name'/>\n          <input type=\"text\" name='hobby-name' placeholder='Please enter your hobby name'/>\n          <input type=\"email\" name='email' placeholder='Please enter your email'/>\n          <textarea name=\"description\" rows=\"5\" placeholder='Please describe yours hobby'></textarea>\n          <input type=\"number\" name='amount' placeholder='Please enter amount for yours needs'/>\n          <DatePicker\n            onChange={this.handleChange}\n            selected={this.state.startDate}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ProjectRegistration;","import React, { Component, Fragment } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NavBar from './components/NavBar/NavBar';\nimport ProjectsList from  './components/ProjectsList/ProjectsList';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport ProjectRegistration from './components/ProjectRegistration/ProjectRegistration';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Fragment>\n          <NavBar/>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/projects' component={ProjectsList}/>\n            <Route path='/login' component={Login}/>\n            <Route path='/register' component={Register}/>\n            <Route path='/project-registration' component={ProjectRegistration}/>\n          </Switch>\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}