{"version":3,"sources":["actions/types.js","reducers/loginReducer.js","reducers/registerReducer.js","reducers/rootReducer.js","components/Home/Home.js","components/Logo/Logo.js","components/NavBar/NavBar.js","components/ProjectsList/ProjectsList.js","thunks/loginThunk.js","actions/loginActions.js","components/Loader/Loader.js","components/Login/Login.js","components/Register/Register.js","components/ProjectRegistration/ProjectRegistration.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN_FORM_INPUT_CHANGE","LOGIN_FORM_LOADING","LOGIN_FORM_ERROR","LOGIN_FORM_SUCCESS","initialState","email","password","error","loading","name","password2","rootReducer","combineReducers","login","state","arguments","length","undefined","action","type","types","Object","objectSpread","defineProperty","value","registerReducer","projectRegister","projectRegisterReducer","Home","react_default","a","createElement","className","react_router_dom","to","Logo","NavBar","components_Logo_Logo","exact","activeClassName","Component","ProjectsList","onFormSubmit","user","history","dispatch","actions","push","Loader","_ref","color","_ref$h","h","style","width","height","borderRight","concat","borderLeft","borderTop","borderBottom","Login","e","preventDefault","_this","props","_this$props$login","this","onInputChange","console","log","textAlign","onSubmit","onChange","placeholder","components_Loader_Loader","fontSize","connect","target","Register","setState","ProjectRegistration","startDate","handleChange","date","rows","react_datepicker_es","selected","placeholderText","dateFormat","App","basename","process","react","components_NavBar_NavBar","react_router","path","component","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e67a2512.chunk.js","sourcesContent":["// Login types\n\nexport const LOGIN_FORM_INPUT_CHANGE = 'LOGIN_FORM_INPUT_CHANGE';\nexport const LOGIN_FORM_LOADING = 'LOGIN_FORM_LOADING';\nexport const LOGIN_FORM_ERROR = 'LOGIN_FORM_ERROR';\nexport const LOGIN_FORM_SUCCESS = 'LOGIN_FORM_SUCCESS';","import * as types from '../actions/types';\n\nconst initialState = {\n  email: '',\n  password: '',\n  error: '',\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOGIN_FORM_INPUT_CHANGE:\n      return {...state, [action.name]: action.value};\n    case types.LOGIN_FORM_LOADING:\n      return {...state, loading: true};\n    case types.LOGIN_FORM_ERROR:\n      return {...state, error: action.error, loading:false};\n    case types.LOGIN_FORM_SUCCESS:\n      return {...state, loading:false};\n    default:\n      return state;\n  }\n}","import * as types from '../actions/types';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  password2: '',\n  error: ''\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}","import {combineReducers} from  'redux';\nimport loginReducer from './loginReducer';\nimport registerReducer from './registerReducer';\nimport projectRegisterReducer from './projectRegisterReducer';\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  registerReducer: registerReducer,\n  projectRegister: projectRegisterReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Home.scss';\n\nconst Home = () => {\n  return (\n    <div className='Home'>\n      <p>This is place for yours hobby projects.</p>\n      <p>If you have account please\n        <Link className='Link' to='/login'> Sing In</Link>\n      </p>\n      <p>If you don't have account please\n        <Link className='Link' to='/register'> Sing Up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => {\n  return (\n    <div className='Logo'>\n      <div className='Logo-main'>HC</div>\n      <span className='Logo-title'>HobbyCraft</span>\n    </div>\n  );\n};\n\nexport default Logo;","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport './NavBar.scss';\n\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div className='NavBar'>\n        <Logo/>\n        <nav>\n          <ul>\n            <NavLink exact to='/' className='NavBar-link' activeClassName='active-link'>Home</NavLink>\n            <NavLink to='/projects' className='NavBar-link' activeClassName='active-link'>Projects</NavLink>\n            <NavLink to='/project-registration' className='NavBar-link New-Project' activeClassName='active-link'>New Project</NavLink>\n          </ul>\n        </nav>\n        <div>\n          <Link className='SignIn-link' to='/login'>Sign In</Link>\n          <Link className='SignIn-link' to='/register'>Sign Up</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './ProjectsList.scss';\n\nclass ProjectsList extends Component {\n  render() {\n    return (\n      <div className='ProjectsList'>\n        <p>Projects will be soon...</p>\n        <p>If you have project, please{' '}\n          <Link className='Link' to='/project-registration'>Register</Link>\n          {' '}yours project(hobby).\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ProjectsList;","import * as actions from '../actions/loginActions';\n\nexport const onFormSubmit = (user, history) => (dispatch) => {\n  dispatch(actions.onFormLoading());\n  if(user.email === '' || user.password === '' ) {\n    return dispatch(actions.onLoginFormError('Please fill fields'));\n  }\n  dispatch(actions.onLoginFormSuccess(user));\n  history.push('/');\n}","import * as types from './types.js';\n\nexport function onInputChange(e) {\n  return {\n    type: types.LOGIN_FORM_INPUT_CHANGE,\n    name: e.target.name,\n    value: e.target.value\n  }\n}\n\nexport function onFormLoading() {\n  return {\n    type: types.LOGIN_FORM_LOADING\n  }\n}\n\nexport function onLoginFormError(error) {\n  return {\n    type: types.LOGIN_FORM_ERROR,\n    error\n  }\n}\n\nexport function onLoginFormSuccess(user) {\n  return {\n    type:types.LOGIN_FORM_SUCCESS,\n    user\n  }\n}","import React from 'react';\nimport './loader.scss';\n\nconst Loader = ({color,h=40}) => (\n  <div\n    style={{\n      width:h+'px',\n      height:h+'px',\n      borderRight:`${h/6}px solid transparent`,\n      borderLeft:`${h/6}px solid transparent`,\n      borderTop:`${h/6}px solid ${color}`,\n      borderBottom:`${h/6}px solid ${color}`,\n    }}\n    className={`Loader ${color}`}/>\n);\n\nexport default Loader;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions/loginActions';\nimport { onFormSubmit } from '../../thunks/loginThunk';\nimport Loader from '../Loader/Loader';\nimport './Login.scss';\n\n\nclass Login extends Component {\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.props.login, this.props.history)\n  }\n\n\n  render() {\n    const { email, password, error, loading } = this.props.login\n    const { onInputChange } =this.props;\n    console.log(\"Error\" + error);\n    return (\n      <div className='Login'>\n        <h2>Please Sign In</h2>\n        {error ? <p style={{\n          color: 'red',\n          textAlign: 'center'\n        }}>{error}</p> : null}\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            type=\"email\"\n            name='email'\n            value={email}\n            onChange={onInputChange}\n            placeholder='Please enter yours email'/>\n          <input\n            type=\"password\"\n            name='password'\n            value={password}\n            onChange={onInputChange}\n            placeholder='Please enter yours password'/>\n          <button type=\"submit\">\n            {loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/register'>Sign Up</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.login\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onInputChange: (e) => dispatch(actions.onInputChange(e)),\n  onFormSubmit: (user, history) =>dispatch(onFormSubmit(user,history)),\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport Loader from '../Loader/Loader';\nimport {Link} from \"react-router-dom\";\nimport './Register.scss'\n\nclass Register extends Component {\n  state = {\n    loading: false\n  }\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.setState({loading: !this.state.loading})\n  }\n  render() {\n    return (\n      <div className='Register'>\n        <h2>Please Sign Up</h2>\n        <form onSubmit={this.onFormSubmit}>\n          <input type=\"text\" name='username' placeholder='Please enter your name'/>\n          <input type=\"email\" name='email' placeholder='Please enter your email'/>\n          <input type=\"password\" name='password' placeholder='Please enter your password'/>\n          <input type=\"password\" name='password2' placeholder='Please repeat your password'/>\n          <button type=\"submit\">\n            {this.state.loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n        <p style={{fontSize: '12px'}}>If you don't have account, please{' '}\n          <Link className='Link' to='/login'>Sign In</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport './ProjectRegistration.scss';\nimport Loader from '../Loader/Loader';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass ProjectRegistration extends Component {\n  state = {\n    startDate: null,\n    loading: false,\n  }\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.setState({loading: !this.state.loading})\n  }\n  handleChange = (date) => {\n    this.setState({\n      startDate: date\n    });\n  }\n  render() {\n    return (\n      <div className='ProjectForm'>\n        <h2>Please Register Your Hobby</h2>\n        <form onSubmit={this.onFormSubmit}>\n          <input type=\"text\" name='username' placeholder='Please enter your name'/>\n          <input type=\"text\" name='hobbyName' placeholder='Please enter your hobby name'/>\n          <input type=\"email\" name='email' placeholder='Please enter your email'/>\n          <textarea name=\"description\" rows=\"5\" placeholder='Please describe yours hobby'></textarea>\n          <input type=\"number\" name='amount' placeholder='Please enter amount for yours needs'/>\n          <DatePicker\n            onChange={this.handleChange}\n            selected={this.state.startDate}\n            placeholderText=\"Select project end date\"\n            dateFormat=\"yyyy MM dd\"\n          />\n          <button className=\"form-submit\" type=\"submit\">\n            {this.state.loading ? <Loader color={'#fff'} h={15} /> : 'Sign In'}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ProjectRegistration;","import React, { Component, Fragment } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NavBar from './components/NavBar/NavBar';\nimport ProjectsList from  './components/ProjectsList/ProjectsList';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport ProjectRegistration from './components/ProjectRegistration/ProjectRegistration';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Fragment>\n          <NavBar/>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/projects' component={ProjectsList}/>\n            <Route path='/login' component={Login}/>\n            <Route path='/register' component={Register}/>\n            <Route path='/project-registration' component={ProjectRegistration}/>\n          </Switch>\n        </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}>\n  <App/>\n</Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}